package main;

import javax.swing.JOptionPane;

/**
 *
 * @author Michael Gonzalez
 * @author Michael Betancourt
 * @author Rober Alexander Martinez
 */
public class InterfazArbol extends javax.swing.JFrame {

    Raiz raiz;
    boolean listo;
    boolean existe;
    Raiz raizAux;

    public InterfazArbol() {
        this.listo = false;
        this.existe = false;
        this.raizAux = new Raiz(2);
        initComponents();
        pruebas();
        setLocationRelativeTo(null);   
    }
    
    private void pruebas() {
        crearArbol("5");
        insertarDatos("5");
        for (int i = 0; i < 30; i++) {
            int dato = (int)(Math.random() * 100);
            insertarDatos(dato + "");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        kGradientPanel1 = new keeptoo.KGradientPanel();
        Crear = new keeptoo.KGradientPanel();
        campoGrado = new javax.swing.JTextField();
        btnCrearArbol = new keeptoo.KButton();
        kGradientPanel2 = new keeptoo.KGradientPanel();
        btnVerArbol = new keeptoo.KButton();
        kGradientPanel3 = new keeptoo.KGradientPanel();
        campoInsertar = new javax.swing.JTextField();
        campoEliminar = new javax.swing.JTextField();
        campoBuscar = new javax.swing.JTextField();
        btnInsertarDato = new keeptoo.KButton();
        btnEliminarDato = new keeptoo.KButton();
        btnBuscarDato = new keeptoo.KButton();
        BotonCerrar = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        kGradientPanel1.setkEndColor(new java.awt.Color(0, 51, 102));
        kGradientPanel1.setkStartColor(new java.awt.Color(0, 0, 0));
        kGradientPanel1.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                kGradientPanel1MouseDragged(evt);
            }
        });
        kGradientPanel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                kGradientPanel1MousePressed(evt);
            }
        });

        Crear.setBackground(new java.awt.Color(255, 255, 255));
        Crear.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Crear Arbol", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 0, 12), new java.awt.Color(255, 255, 255))); // NOI18N
        Crear.setForeground(new java.awt.Color(255, 255, 255));
        Crear.setToolTipText("");
        Crear.setkEndColor(new java.awt.Color(0, 102, 204));
        Crear.setkStartColor(new java.awt.Color(0, 0, 0));

        btnCrearArbol.setText("Crear Nuevo Arbol");
        btnCrearArbol.setkBackGroundColor(new java.awt.Color(0, 102, 204));
        btnCrearArbol.setkEndColor(new java.awt.Color(204, 204, 204));
        btnCrearArbol.setkHoverEndColor(new java.awt.Color(0, 0, 0));
        btnCrearArbol.setkHoverForeGround(new java.awt.Color(0, 102, 153));
        btnCrearArbol.setkHoverStartColor(new java.awt.Color(0, 0, 0));
        btnCrearArbol.setkStartColor(new java.awt.Color(0, 51, 153));
        btnCrearArbol.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCrearArbolActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout CrearLayout = new javax.swing.GroupLayout(Crear);
        Crear.setLayout(CrearLayout);
        CrearLayout.setHorizontalGroup(
            CrearLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CrearLayout.createSequentialGroup()
                .addContainerGap(83, Short.MAX_VALUE)
                .addGroup(CrearLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, CrearLayout.createSequentialGroup()
                        .addComponent(campoGrado, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(82, 82, 82))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, CrearLayout.createSequentialGroup()
                        .addComponent(btnCrearArbol, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(59, 59, 59))))
        );
        CrearLayout.setVerticalGroup(
            CrearLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CrearLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(campoGrado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnCrearArbol, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(13, Short.MAX_VALUE))
        );

        kGradientPanel2.setBackground(new java.awt.Color(255, 255, 255));
        kGradientPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(41, 43, 45)), "Visualizar", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 0, 12), new java.awt.Color(255, 255, 255))); // NOI18N
        kGradientPanel2.setForeground(new java.awt.Color(255, 255, 255));
        kGradientPanel2.setkEndColor(new java.awt.Color(0, 102, 204));
        kGradientPanel2.setkStartColor(new java.awt.Color(0, 0, 0));

        btnVerArbol.setText("Ver Arbol");
        btnVerArbol.setkBackGroundColor(new java.awt.Color(0, 102, 204));
        btnVerArbol.setkEndColor(new java.awt.Color(204, 204, 204));
        btnVerArbol.setkHoverEndColor(new java.awt.Color(0, 0, 0));
        btnVerArbol.setkHoverForeGround(new java.awt.Color(0, 102, 153));
        btnVerArbol.setkHoverStartColor(new java.awt.Color(0, 0, 0));
        btnVerArbol.setkStartColor(new java.awt.Color(0, 51, 153));
        btnVerArbol.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVerArbolActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout kGradientPanel2Layout = new javax.swing.GroupLayout(kGradientPanel2);
        kGradientPanel2.setLayout(kGradientPanel2Layout);
        kGradientPanel2Layout.setHorizontalGroup(
            kGradientPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, kGradientPanel2Layout.createSequentialGroup()
                .addContainerGap(33, Short.MAX_VALUE)
                .addComponent(btnVerArbol, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28))
        );
        kGradientPanel2Layout.setVerticalGroup(
            kGradientPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(kGradientPanel2Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(btnVerArbol, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        kGradientPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(41, 43, 45)), "Opciones", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 0, 12), new java.awt.Color(255, 255, 255))); // NOI18N
        kGradientPanel3.setForeground(new java.awt.Color(255, 255, 255));
        kGradientPanel3.setkEndColor(new java.awt.Color(0, 102, 204));
        kGradientPanel3.setkStartColor(new java.awt.Color(0, 0, 0));

        btnInsertarDato.setText("Insertar Dato");
        btnInsertarDato.setkBackGroundColor(new java.awt.Color(0, 102, 204));
        btnInsertarDato.setkEndColor(new java.awt.Color(204, 204, 204));
        btnInsertarDato.setkHoverEndColor(new java.awt.Color(0, 0, 0));
        btnInsertarDato.setkHoverForeGround(new java.awt.Color(0, 102, 153));
        btnInsertarDato.setkHoverStartColor(new java.awt.Color(0, 0, 0));
        btnInsertarDato.setkStartColor(new java.awt.Color(0, 51, 153));
        btnInsertarDato.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInsertarDatoActionPerformed(evt);
            }
        });

        btnEliminarDato.setText("Eliminar Dato");
        btnEliminarDato.setkBackGroundColor(new java.awt.Color(0, 102, 204));
        btnEliminarDato.setkEndColor(new java.awt.Color(204, 204, 204));
        btnEliminarDato.setkHoverEndColor(new java.awt.Color(0, 0, 0));
        btnEliminarDato.setkHoverForeGround(new java.awt.Color(0, 102, 153));
        btnEliminarDato.setkHoverStartColor(new java.awt.Color(0, 0, 0));
        btnEliminarDato.setkStartColor(new java.awt.Color(0, 51, 153));
        btnEliminarDato.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarDatoActionPerformed(evt);
            }
        });

        btnBuscarDato.setText("Buscar Dato");
        btnBuscarDato.setkBackGroundColor(new java.awt.Color(0, 102, 204));
        btnBuscarDato.setkEndColor(new java.awt.Color(204, 204, 204));
        btnBuscarDato.setkHoverEndColor(new java.awt.Color(0, 0, 0));
        btnBuscarDato.setkHoverForeGround(new java.awt.Color(0, 102, 153));
        btnBuscarDato.setkHoverStartColor(new java.awt.Color(0, 0, 0));
        btnBuscarDato.setkStartColor(new java.awt.Color(0, 51, 153));
        btnBuscarDato.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarDatoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout kGradientPanel3Layout = new javax.swing.GroupLayout(kGradientPanel3);
        kGradientPanel3.setLayout(kGradientPanel3Layout);
        kGradientPanel3Layout.setHorizontalGroup(
            kGradientPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(kGradientPanel3Layout.createSequentialGroup()
                .addGap(56, 56, 56)
                .addComponent(campoInsertar, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(96, 96, 96)
                .addComponent(campoEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(campoBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(49, 49, 49))
            .addGroup(kGradientPanel3Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(btnInsertarDato, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41)
                .addComponent(btnEliminarDato, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 48, Short.MAX_VALUE)
                .addComponent(btnBuscarDato, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26))
        );
        kGradientPanel3Layout.setVerticalGroup(
            kGradientPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, kGradientPanel3Layout.createSequentialGroup()
                .addGap(0, 37, Short.MAX_VALUE)
                .addGroup(kGradientPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(campoInsertar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(campoEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(campoBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(kGradientPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnInsertarDato, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnEliminarDato, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBuscarDato, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24))
        );

        BotonCerrar.setForeground(new java.awt.Color(255, 255, 255));
        BotonCerrar.setText("[X] Cerrar");
        BotonCerrar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BotonCerrarMouseClicked(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("ARBOL B");

        javax.swing.GroupLayout kGradientPanel1Layout = new javax.swing.GroupLayout(kGradientPanel1);
        kGradientPanel1.setLayout(kGradientPanel1Layout);
        kGradientPanel1Layout.setHorizontalGroup(
            kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(kGradientPanel1Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(kGradientPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(kGradientPanel1Layout.createSequentialGroup()
                        .addComponent(Crear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(kGradientPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(29, 29, 29))
            .addGroup(kGradientPanel1Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(BotonCerrar)
                .addGap(17, 17, 17))
        );
        kGradientPanel1Layout.setVerticalGroup(
            kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(kGradientPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(BotonCerrar)
                    .addComponent(jLabel1))
                .addGap(19, 19, 19)
                .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(Crear, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(kGradientPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 51, Short.MAX_VALUE)
                .addComponent(kGradientPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(kGradientPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(kGradientPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BotonCerrarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BotonCerrarMouseClicked
        System.exit(0);
    }//GEN-LAST:event_BotonCerrarMouseClicked

    private void btnCrearArbolActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCrearArbolActionPerformed
        crearArbol(campoGrado.getText());
    }//GEN-LAST:event_btnCrearArbolActionPerformed

    private void btnVerArbolActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVerArbolActionPerformed
        verArbol();
    }//GEN-LAST:event_btnVerArbolActionPerformed

    private void btnInsertarDatoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInsertarDatoActionPerformed
        insertarDatos(campoInsertar.getText());
    }//GEN-LAST:event_btnInsertarDatoActionPerformed

    private void btnEliminarDatoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarDatoActionPerformed
        eliminarDatos(campoEliminar.getText());
    }//GEN-LAST:event_btnEliminarDatoActionPerformed

    private void btnBuscarDatoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarDatoActionPerformed
        buscarDato(campoBuscar.getText());
    }//GEN-LAST:event_btnBuscarDatoActionPerformed

    private void kGradientPanel1MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_kGradientPanel1MouseDragged
        new keeptoo.Drag(kGradientPanel1).moveWindow(evt);
    }//GEN-LAST:event_kGradientPanel1MouseDragged

    private void kGradientPanel1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_kGradientPanel1MousePressed
        new keeptoo.Drag(kGradientPanel1).onPress(evt);
    }//GEN-LAST:event_kGradientPanel1MousePressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException
                | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InterfazArbol.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> new InterfazArbol().setVisible(true));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel BotonCerrar;
    private keeptoo.KGradientPanel Crear;
    private keeptoo.KButton btnBuscarDato;
    private keeptoo.KButton btnCrearArbol;
    private keeptoo.KButton btnEliminarDato;
    private keeptoo.KButton btnInsertarDato;
    private keeptoo.KButton btnVerArbol;
    private javax.swing.JTextField campoBuscar;
    private javax.swing.JTextField campoEliminar;
    private javax.swing.JTextField campoGrado;
    private javax.swing.JTextField campoInsertar;
    private javax.swing.JLabel jLabel1;
    private keeptoo.KGradientPanel kGradientPanel1;
    private keeptoo.KGradientPanel kGradientPanel2;
    private keeptoo.KGradientPanel kGradientPanel3;
    // End of variables declaration//GEN-END:variables

    public void crearArbol(String grado) {
        Raiz.arbol = "";
        if (!grado.equals("")) {
            boolean numero = raizAux.validarNumero(grado);
            if (numero) {
                if (!(Integer.parseInt(grado) < 1)) {
                    existe = true;
                    raiz = new Raiz(Integer.parseInt(grado));
                    if (Raiz.orden > 10000) {
                        JOptionPane.showMessageDialog(null, "Este arbol procesa un maximo de 10000", "ERROR CRITICO", JOptionPane.ERROR_MESSAGE);
                        campoGrado.setText("");
                        return;
                    }
                    JOptionPane.showMessageDialog(this, "Ha sido creado un nuevo arbol B de grado "
                            + grado,
                            "CREACIÓN EXITOSA", JOptionPane.INFORMATION_MESSAGE);
                    listo = true;
                } else {
                    JOptionPane.showMessageDialog(this, "Debe ingresar un grado entero, mayor o igual a 1",
                            "ERROR CRITICO!!", JOptionPane.ERROR_MESSAGE);
                }
            } else {
                JOptionPane.showMessageDialog(this, "Debe ingresar un grado entero, mayor o igual a 1",
                        "ERROR CRITICO!!", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Debe ingresar algun dato en el campo de texto",
                    "ERROR CRITICO!!", JOptionPane.ERROR_MESSAGE);
        }
        campoGrado.setText("");
    }

    public void insertarDatos(String dato) {
        if (!dato.equals("")) {
            boolean numero = raizAux.validarNumero(dato);
            if (numero) {
                boolean adentro = false;
                if (existe) {
                    for (int i = 0; i < Raiz.listaClaves.size(); i++) {
                        if (Raiz.listaClaves.get(i) == Integer.parseInt(dato)) {
                            adentro = true;
                        }
                    }
                }
                if (!adentro) {
                    if (!dato.equals("")) {
                        if (!dato.equals("0")) {
                            if (listo) {
                                raiz.insertarNodo(Integer.parseInt(dato));
                                //JOptionPane.showMessageDialog(this, "El elemento "
                                //        + dato + " ha sido ingresado de forma exitosa al arbol B",
                                //        "Inserción Exitosa", JOptionPane.INFORMATION_MESSAGE);
                            } else {
                                JOptionPane.showMessageDialog(this, "No ha sido creado ningun arbol B",
                                        "ERROR CRITICO!!", JOptionPane.WARNING_MESSAGE);
                            }
                        } else {
                            JOptionPane.showMessageDialog(this, "Ingrese datos distintos de 0",
                                    "ERROR CRITICO!!", JOptionPane.WARNING_MESSAGE);
                        }
                    } else {
                        JOptionPane.showMessageDialog(this, "Debe ingresar datos en el campo",
                                "ERROR CRITICO!!", JOptionPane.WARNING_MESSAGE);
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "El elemento ya se ha ingresado anteriormente",
                            "ERROR CRITICO!!", JOptionPane.ERROR_MESSAGE);
                }
            } else {
                JOptionPane.showMessageDialog(this, "Ingrese numeros enteros diferentes de 0",
                        "ERROR CRITICO!!", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Debe ingresar datos en el campo",
                    "ERROR CRITICO!!", JOptionPane.ERROR_MESSAGE);
        }
        campoInsertar.setText("");
    }

    public void eliminarDatos(String dato) {
        boolean esta = false;
        boolean numero = raizAux.validarNumero(dato);
        if (!dato.equals("")) {
            if (numero) {
                if (listo) {
                    for (int i = 0; i < Raiz.listaClaves.size(); i++) {
                        if (Raiz.listaClaves.get(i) == Integer.parseInt(dato)) {
                            esta = true;
                        }
                    }
                    raiz.eliminar(Integer.parseInt(dato));
                    if (esta) {
                        JOptionPane.showMessageDialog(this, "El elemento " + dato
                                + " fue eliminado exitosamente",
                                "ELIMINACIÓN EXITOSA", JOptionPane.INFORMATION_MESSAGE);
                    } else {
                        JOptionPane.showMessageDialog(this, "El elemento " + dato
                                + " no estaba en el arbol",
                                "NO ENCONTRADO", JOptionPane.WARNING_MESSAGE);
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "Aun no se ha creado ningun arbol B",
                            "ERROR CRITICO!!", JOptionPane.ERROR_MESSAGE);
                }
            } else {
                JOptionPane.showMessageDialog(this, "Ingrese numeros enteros diferentes de 0",
                        "INGRESE DATOS VALIDOS", JOptionPane.ERROR_MESSAGE);
            }
            campoEliminar.setText("");
        } else {
            JOptionPane.showMessageDialog(this, "Debe ingresar algun dato en el campo",
                    "ERROR CRITICO!!", JOptionPane.ERROR_MESSAGE);
        }
    }
    
    public void buscarDato(String dato) {
        if (!dato.equals("")) {
            boolean numero = raizAux.validarNumero(dato);
            if (numero) {
                if (listo) {
                    boolean esta = raiz.buscar(Integer.parseInt(dato));
                    if (esta) {
                        JOptionPane.showMessageDialog(this, "El elemento "
                                + dato + " si se encuentra en el arbol B",
                                "DATO ENCONTRADO!!!", JOptionPane.INFORMATION_MESSAGE);
                    } else {
                        JOptionPane.showMessageDialog(this, "El elemento "
                                + dato + " no se encuentra en el arbol B",
                                "DATO NO ENCONTRADO!!!", JOptionPane.ERROR_MESSAGE);
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "Aun no se ha creado ningun arbol",
                            "ERROR CRITICO!!", JOptionPane.WARNING_MESSAGE);
                }
            } else {
                JOptionPane.showMessageDialog(this, "Ingrese numeros enteros diferentes a cero",
                        "ERROR CRITICO!!", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Debe digitar algun numero en el campo",
                    "ERROR CRITICO!!", JOptionPane.ERROR_MESSAGE);
        }
        campoBuscar.setText("");
    }

    public void verArbol() {
        ImpresionArbol impre = new ImpresionArbol();
        raiz.arbol = "";
        if (listo) {
            if (Raiz.orden > 1000 && Raiz.orden <= 10000) {
                JOptionPane.showMessageDialog(null, "para ver todos los datos en consola "
                        + "por favor pulse click derecho en la consola y seleccione wrap text", "VISTA EN CONSOLA", JOptionPane.INFORMATION_MESSAGE);
            }
            String raiz11 = "raiz [ ";
            for (int i = 0; i < raiz.primero.claves.length && raiz.primero.claves[i] != 0; i++) {
                raiz11 += raiz.primero.claves[i] + "  ";
            }
            raiz11 += " ]\n";
            raiz11 += raiz.impresion();
            impre.getTableroImpresion().setText(raiz11);
            System.out.println(raiz11);

            impre.setVisible(true);
        } else {
            JOptionPane.showMessageDialog(this, "No hay ningún árbol que mostrar",
                    "ERROR CRITICO!!", JOptionPane.ERROR_MESSAGE);
        }
    }
}
